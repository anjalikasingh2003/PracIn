{"ast":null,"code":"var _jsxFileName = \"/home/anjalika/PracIn/frontend/src/components/Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = ({\n  showTimer,\n  toggleTimer,\n  isInterviewStarted\n}) => {\n  _s();\n  const [seconds, setSeconds] = useState(0);\n  useEffect(() => {\n    let interval = null;\n    if (isInterviewStarted && showTimer) {\n      interval = setInterval(() => setSeconds(s => s + 1), 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isInterviewStarted, showTimer]);\n  const formatTime = s => {\n    const mins = Math.floor(s / 60);\n    const secs = s % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCBB InterviewBot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"New Interview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTimer,\n        children: showTimer ? 'Hide Timer' : 'Show Timer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), showTimer && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"timer\",\n        children: formatTime(seconds)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"mcG2hTHI4q8+uIAAnRxppoT2y1s=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Navbar","showTimer","toggleTimer","isInterviewStarted","_s","seconds","setSeconds","interval","setInterval","s","clearInterval","formatTime","mins","Math","floor","secs","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["/home/anjalika/PracIn/frontend/src/components/Navbar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Navbar = ({ showTimer, toggleTimer, isInterviewStarted }) => {\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    let interval = null;\n    if (isInterviewStarted && showTimer) {\n      interval = setInterval(() => setSeconds((s) => s + 1), 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isInterviewStarted, showTimer]);\n\n  const formatTime = (s) => {\n    const mins = Math.floor(s / 60);\n    const secs = s % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs\n      .toString()\n      .padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"navbar\">\n      <h2>ðŸ’» InterviewBot</h2>\n      <div className=\"nav-buttons\">\n        <button onClick={() => window.location.reload()}>New Interview</button>\n        <button onClick={toggleTimer}>\n          {showTimer ? 'Hide Timer' : 'Show Timer'}\n        </button>\n        {showTimer && <span className=\"timer\">{formatTime(seconds)}</span>}\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAC;EAAEC,SAAS;EAAEC,WAAW;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEzCD,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,GAAG,IAAI;IACnB,IAAIJ,kBAAkB,IAAIF,SAAS,EAAE;MACnCM,QAAQ,GAAGC,WAAW,CAAC,MAAMF,UAAU,CAAEG,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;IAC9D;IACA,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACJ,kBAAkB,EAAEF,SAAS,CAAC,CAAC;EAEnC,MAAMU,UAAU,GAAIF,CAAC,IAAK;IACxB,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,CAAC,GAAG,EAAE,CAAC;IAC/B,MAAMM,IAAI,GAAGN,CAAC,GAAG,EAAE;IACnB,OAAO,GAAGG,IAAI,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,IAAI,CAC/CC,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACvB,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBpB,OAAA;MAAAoB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBxB,OAAA;MAAKmB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BpB,OAAA;QAAQyB,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAE;QAAAR,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACvExB,OAAA;QAAQyB,OAAO,EAAEtB,WAAY;QAAAiB,QAAA,EAC1BlB,SAAS,GAAG,YAAY,GAAG;MAAY;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,EACRtB,SAAS,iBAAIF,OAAA;QAAMmB,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAER,UAAU,CAACN,OAAO;MAAC;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CA/BIJ,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AAiCZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}