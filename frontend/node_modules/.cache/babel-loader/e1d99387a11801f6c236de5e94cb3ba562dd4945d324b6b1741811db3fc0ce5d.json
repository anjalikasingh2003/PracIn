{"ast":null,"code":"var _jsxFileName = \"/home/anjalika/PracIn/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport CodeEditor from './components/CodeEditor';\nimport ChatBot from './components/ChatBot';\nimport ThemeToggle from './components/ThemeToggle';\nimport Navbar from './components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [darkMode, setDarkMode] = useState(true);\n  const [showTimer, setShowTimer] = useState(true);\n  const [interviewStarted, setInterviewStarted] = useState(true); // Set this when the interview/chat starts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app-container ${darkMode ? 'dark' : 'light'}`,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      showTimer: showTimer,\n      toggleTimer: () => setShowTimer(prev => !prev),\n      isInterviewStarted: interviewStarted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeToggle, {\n      darkMode: darkMode,\n      setDarkMode: setDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(CodeEditor, {\n        darkMode: darkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBot, {\n        darkMode: darkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Q6Is7XjIZ0JroiqcZDHIRuMvWkM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CodeEditor","ChatBot","ThemeToggle","Navbar","jsxDEV","_jsxDEV","App","_s","darkMode","setDarkMode","showTimer","setShowTimer","interviewStarted","setInterviewStarted","className","children","toggleTimer","prev","isInterviewStarted","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/anjalika/PracIn/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport CodeEditor from './components/CodeEditor';\nimport ChatBot from './components/ChatBot';\nimport ThemeToggle from './components/ThemeToggle';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(true);\n  const [showTimer, setShowTimer] = useState(true);\n  const [interviewStarted, setInterviewStarted] = useState(true); // Set this when the interview/chat starts\n\n  return (\n    <div className={`app-container ${darkMode ? 'dark' : 'light'}`}>\n      {/* Navbar goes at the top */}\n      <Navbar\n        showTimer={showTimer}\n        toggleTimer={() => setShowTimer((prev) => !prev)}\n        isInterviewStarted={interviewStarted}\n      />\n\n      {/* Theme toggle */}\n      <ThemeToggle darkMode={darkMode} setDarkMode={setDarkMode} />\n\n      {/* Main content: Editor + Chat */}\n      <div className=\"main-content\">\n        <CodeEditor darkMode={darkMode} />\n        <ChatBot  darkMode={darkMode} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhE,oBACEM,OAAA;IAAKS,SAAS,EAAE,iBAAiBN,QAAQ,GAAG,MAAM,GAAG,OAAO,EAAG;IAAAO,QAAA,gBAE7DV,OAAA,CAACF,MAAM;MACLO,SAAS,EAAEA,SAAU;MACrBM,WAAW,EAAEA,CAAA,KAAML,YAAY,CAAEM,IAAI,IAAK,CAACA,IAAI,CAAE;MACjDC,kBAAkB,EAAEN;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eAGFjB,OAAA,CAACH,WAAW;MAACM,QAAQ,EAAEA,QAAS;MAACC,WAAW,EAAEA;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG7DjB,OAAA;MAAKS,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BV,OAAA,CAACL,UAAU;QAACQ,QAAQ,EAAEA;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClCjB,OAAA,CAACJ,OAAO;QAAEO,QAAQ,EAAEA;MAAS;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACf,EAAA,CAxBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}